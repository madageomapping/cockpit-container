name: Build

on:
  workflow_call:
    inputs:
      base_image:
        type: string
        required: true
      release:
        type: boolean
        required: true
    secrets:
      username:
        required: true
      token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      # FIXME this is kind of hacky, but for some reason $GITHUB_OUTPUT and $GITHUB_ENV just don't work here
      - name: Get Cockpit version (workaround)
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ inputs.base_image }}
          options: -v ${{ github.workspace }}:/workspace
          shell: bash
          run: |
            set -euo pipefail
            
            dnf info -q cockpit-ws | sed -e "/^Version/!d" -e "s/Version  *:  *//g" | tr -d "\n" > /workspace/COCKPIT_VERSION || :

      - name: Get Cockpit version
        id: get-cockpit-version
        shell: bash
        run: |
          set -euo pipefail
          
          cockpit_version=$(cat ${{ github.workspace }}/COCKPIT_VERSION)
          
          rm -f COCKPIT_VERSION
          
          bearer_token=$(echo "${{ secrets.token }}" | base64)
          
          if [[ "${{ inputs.release }}" = "true" ]] && curl -If -H "Authorization: Bearer ${bearer_token}" "https://ghcr.io/v2/${{ github.repository }}/manifests/${cockpit_version}"; then
              echo "Version $cockpit_version has already been released."
              exit 1
          fi
          
          echo "cockpit_version=${cockpit_version}" >> $GITHUB_OUTPUT

      - name: Prepare tags
        id: prepare-tags
        shell: bash
        run: |
          set -euo pipefail
          
          tags=""
          
          if [[ "${{ inputs.release }}" = "true" ]]; then
            tags+="ghcr.io/${{ github.repository }}:${{ steps.get-cockpit-version.outputs.cockpit_version }},"
            tags+="ghcr.io/${{ github.repository }}:latest"
          else
            tags+="ghcr.io/${{ github.repository }}:dev"
          fi
          
          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            COCKPIT_VERSION=${{ steps.get-cockpit-version.outputs.cockpit_version }}
          tags: ${{ steps.prepare-tags.outputs.tags }}
